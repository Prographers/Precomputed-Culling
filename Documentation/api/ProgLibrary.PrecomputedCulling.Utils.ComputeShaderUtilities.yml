### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  commentId: T:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  id: ComputeShaderUtilities
  parent: ProgLibrary.PrecomputedCulling.Utils
  children:
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(``0[]@,ComputeBufferType)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(System.Int32,ComputeBufferType)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer``1(``0,ComputeBufferType)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer``1(ComputeBuffer,System.Int32,System.Boolean)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer``1(ComputeBuffer,System.Boolean)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.Int32,System.Int32,ComputeBufferType)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.String,``0[]@,ComputeBufferType)
  - ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer``1(ComputeShader,System.Int32,System.String,``0,ComputeBufferType)
  langs:
  - csharp
  - vb
  name: ComputeShaderUtilities
  nameWithType: ComputeShaderUtilities
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  type: Class
  source:
    id: ComputeShaderUtilities
    path: ''
    startLine: 7939
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nShader management for culling\n"
  example: []
  syntax:
    content: public static class ComputeShaderUtilities
    content.vb: Public Module ComputeShaderUtilities
  inheritance:
  - System.Object
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer``1(``0,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer``1(``0,ComputeBufferType)
  id: CreateValueBuffer``1(``0,ComputeBufferType)
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: CreateValueBuffer<T>(T, ComputeBufferType)
  nameWithType: ComputeShaderUtilities.CreateValueBuffer<T>(T, ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer<T>(T, ComputeBufferType)
  type: Method
  source:
    id: CreateValueBuffer
    path: ''
    startLine: 7948
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nCreates compute buffer of given simple type T for single value\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer CreateValueBuffer<T>(T startingValue = default, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: startingValue
      type: '{T}'
      description: Default starting value
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
      description: ''
    content.vb: Public Shared Function CreateValueBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(startingValue As T = Nothing, type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer*
  nameWithType.vb: ComputeShaderUtilities.CreateValueBuffer(Of T)(T, ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer(Of T)(T, ComputeBufferType)
  name.vb: CreateValueBuffer(Of T)(T, ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(System.Int32,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(System.Int32,ComputeBufferType)
  id: CreateArrayBuffer``1(System.Int32,ComputeBufferType)
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: CreateArrayBuffer<T>(int, ComputeBufferType)
  nameWithType: ComputeShaderUtilities.CreateArrayBuffer<T>(int, ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer<T>(int, ComputeBufferType)
  type: Method
  source:
    id: CreateArrayBuffer
    path: ''
    startLine: 7969
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nCreates compute buffer of given simple type T for single value\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer CreateArrayBuffer<T>(int count, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: count
      type: System.Int32
      description: Default starting value
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
      description: ''
    content.vb: Public Shared Function CreateArrayBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(count As Integer, type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer*
  nameWithType.vb: ComputeShaderUtilities.CreateArrayBuffer(Of T)(Integer, ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer(Of T)(Integer, ComputeBufferType)
  name.vb: CreateArrayBuffer(Of T)(Integer, ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(``0[]@,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer``1(``0[]@,ComputeBufferType)
  id: CreateArrayBuffer``1(``0[]@,ComputeBufferType)
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: CreateArrayBuffer<T>(in T[], ComputeBufferType)
  nameWithType: ComputeShaderUtilities.CreateArrayBuffer<T>(in T[], ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer<T>(in T[], ComputeBufferType)
  type: Method
  source:
    id: CreateArrayBuffer
    path: ''
    startLine: 7988
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nCreates compute buffer of given simple type T for single value\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer CreateArrayBuffer<T>(in T[] initialArray, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: initialArray
      type: '{T}[]'
      description: Default starting array
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
      description: ''
    content.vb: Public Shared Function CreateArrayBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(initialArray As T(), type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer*
  nameWithType.vb: ComputeShaderUtilities.CreateArrayBuffer(Of T)(T(), ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer(Of T)(T(), ComputeBufferType)
  name.vb: CreateArrayBuffer(Of T)(T(), ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer``1(ComputeShader,System.Int32,System.String,``0,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer``1(ComputeShader,System.Int32,System.String,``0,ComputeBufferType)
  id: SetValueBuffer``1(ComputeShader,System.Int32,System.String,``0,ComputeBufferType)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: SetValueBuffer<T>(ComputeShader, int, string, T, ComputeBufferType)
  nameWithType: ComputeShaderUtilities.SetValueBuffer<T>(ComputeShader, int, string, T, ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer<T>(ComputeShader, int, string, T, ComputeBufferType)
  type: Method
  source:
    id: SetValueBuffer
    path: ''
    startLine: 8009
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nSet value for compute shader\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer SetValueBuffer<T>(this ComputeShader computeShader, int kernelId, string name, T startingValue = default, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: computeShader
      type: Global.ComputeShader
      description: Compute shader
    - id: kernelId
      type: System.Int32
      description: Kernel Id of the compute shader
    - id: name
      type: System.String
      description: Name of the property
    - id: startingValue
      type: '{T}'
      description: Default starting value
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
    content.vb: Public Shared Function SetValueBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(computeShader As ComputeShader, kernelId As Integer, name As String, startingValue As T = Nothing, type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer*
  nameWithType.vb: ComputeShaderUtilities.SetValueBuffer(Of T)(ComputeShader, Integer, String, T, ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer(Of T)(ComputeShader, Integer, String, T, ComputeBufferType)
  name.vb: SetValueBuffer(Of T)(ComputeShader, Integer, String, T, ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.String,``0[]@,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.String,``0[]@,ComputeBufferType)
  id: SetArrayBuffer``1(ComputeShader,System.Int32,System.String,``0[]@,ComputeBufferType)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: SetArrayBuffer<T>(ComputeShader, int, string, in T[], ComputeBufferType)
  nameWithType: ComputeShaderUtilities.SetArrayBuffer<T>(ComputeShader, int, string, in T[], ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer<T>(ComputeShader, int, string, in T[], ComputeBufferType)
  type: Method
  source:
    id: SetArrayBuffer
    path: ''
    startLine: 8027
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nSet value for compute shader\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer SetArrayBuffer<T>(this ComputeShader computeShader, int kernelId, string name, in T[] initialArray, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: computeShader
      type: Global.ComputeShader
      description: Compute shader
    - id: kernelId
      type: System.Int32
      description: Kernel Id of the compute shader
    - id: name
      type: System.String
      description: Name of the property
    - id: initialArray
      type: '{T}[]'
      description: Default starting array
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
    content.vb: Public Shared Function SetArrayBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(computeShader As ComputeShader, kernelId As Integer, name As String, initialArray As T(), type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer*
  nameWithType.vb: ComputeShaderUtilities.SetArrayBuffer(Of T)(ComputeShader, Integer, String, T(), ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer(Of T)(ComputeShader, Integer, String, T(), ComputeBufferType)
  name.vb: SetArrayBuffer(Of T)(ComputeShader, Integer, String, T(), ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.Int32,System.Int32,ComputeBufferType)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer``1(ComputeShader,System.Int32,System.Int32,System.Int32,ComputeBufferType)
  id: SetArrayBuffer``1(ComputeShader,System.Int32,System.Int32,System.Int32,ComputeBufferType)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: SetArrayBuffer<T>(ComputeShader, int, int, int, ComputeBufferType)
  nameWithType: ComputeShaderUtilities.SetArrayBuffer<T>(ComputeShader, int, int, int, ComputeBufferType)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer<T>(ComputeShader, int, int, int, ComputeBufferType)
  type: Method
  source:
    id: SetArrayBuffer
    path: ''
    startLine: 8045
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nSet value for compute shader\n"
  example: []
  syntax:
    content: 'public static ComputeBuffer SetArrayBuffer<T>(this ComputeShader computeShader, int kernelId, int name, int count, ComputeBufferType type = null) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: computeShader
      type: Global.ComputeShader
      description: Compute shader
    - id: kernelId
      type: System.Int32
      description: Kernel Id of the compute shader
    - id: name
      type: System.Int32
      description: Name of the property
    - id: count
      type: System.Int32
      description: Default starting value
    - id: type
      type: Global.ComputeBufferType
      description: Type of compute buffer
    typeParameters:
    - id: T
      description: Simple type
    return:
      type: Global.ComputeBuffer
    content.vb: Public Shared Function SetArrayBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(computeShader As ComputeShader, kernelId As Integer, name As Integer, count As Integer, type As ComputeBufferType = Nothing) As ComputeBuffer
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer*
  nameWithType.vb: ComputeShaderUtilities.SetArrayBuffer(Of T)(ComputeShader, Integer, Integer, Integer, ComputeBufferType)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer(Of T)(ComputeShader, Integer, Integer, Integer, ComputeBufferType)
  name.vb: SetArrayBuffer(Of T)(ComputeShader, Integer, Integer, Integer, ComputeBufferType)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer``1(ComputeBuffer,System.Boolean)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer``1(ComputeBuffer,System.Boolean)
  id: GetValueViaBuffer``1(ComputeBuffer,System.Boolean)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: GetValueViaBuffer<T>(ComputeBuffer, bool)
  nameWithType: ComputeShaderUtilities.GetValueViaBuffer<T>(ComputeBuffer, bool)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer<T>(ComputeBuffer, bool)
  type: Method
  source:
    id: GetValueViaBuffer
    path: ''
    startLine: 8061
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet value from compute buffer of single value\n"
  example: []
  syntax:
    content: 'public static T GetValueViaBuffer<T>(this ComputeBuffer buffer, bool clearBuffer = true) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: buffer
      type: Global.ComputeBuffer
      description: ''
    - id: clearBuffer
      type: System.Boolean
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function GetValueViaBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(buffer As ComputeBuffer, clearBuffer As Boolean = True) As T
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer*
  nameWithType.vb: ComputeShaderUtilities.GetValueViaBuffer(Of T)(ComputeBuffer, Boolean)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer(Of T)(ComputeBuffer, Boolean)
  name.vb: GetValueViaBuffer(Of T)(ComputeBuffer, Boolean)
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer``1(ComputeBuffer,System.Int32,System.Boolean)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer``1(ComputeBuffer,System.Int32,System.Boolean)
  id: GetArrayViaBuffer``1(ComputeBuffer,System.Int32,System.Boolean)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities
  langs:
  - csharp
  - vb
  name: GetArrayViaBuffer<T>(ComputeBuffer, int, bool)
  nameWithType: ComputeShaderUtilities.GetArrayViaBuffer<T>(ComputeBuffer, int, bool)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer<T>(ComputeBuffer, int, bool)
  type: Method
  source:
    id: GetArrayViaBuffer
    path: ''
    startLine: 8083
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet value from compute buffer of single value\n"
  example: []
  syntax:
    content: 'public static T[] GetArrayViaBuffer<T>(this ComputeBuffer buffer, int count, bool clearBuffer = true) where T : struct, IComparable, IFormattable, IConvertible, IComparable<T>, IEquatable<T>'
    parameters:
    - id: buffer
      type: Global.ComputeBuffer
      description: ''
    - id: count
      type: System.Int32
      description: ''
    - id: clearBuffer
      type: System.Boolean
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function GetArrayViaBuffer(Of T As {Structure, IComparable, IFormattable, IConvertible, IComparable(Of T), IEquatable(Of T)})(buffer As ComputeBuffer, count As Integer, clearBuffer As Boolean = True) As T()
  overload: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer*
  nameWithType.vb: ComputeShaderUtilities.GetArrayViaBuffer(Of T)(ComputeBuffer, Integer, Boolean)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer(Of T)(ComputeBuffer, Integer, Boolean)
  name.vb: GetArrayViaBuffer(Of T)(ComputeBuffer, Integer, Boolean)
references:
- uid: ProgLibrary.PrecomputedCulling.Utils
  commentId: N:ProgLibrary.PrecomputedCulling.Utils
  name: ProgLibrary.PrecomputedCulling.Utils
  nameWithType: ProgLibrary.PrecomputedCulling.Utils
  fullName: ProgLibrary.PrecomputedCulling.Utils
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.Utils
    name: Utils
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.Utils
    name: Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer
  name: CreateValueBuffer
  nameWithType: ComputeShaderUtilities.CreateValueBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateValueBuffer
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ComputeBufferType
  isExternal: true
  name: ComputeBufferType
  nameWithType: ComputeBufferType
  fullName: ComputeBufferType
- uid: Global.ComputeBuffer
  isExternal: true
  name: ComputeBuffer
  nameWithType: ComputeBuffer
  fullName: ComputeBuffer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer
  name: CreateArrayBuffer
  nameWithType: ComputeShaderUtilities.CreateArrayBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.CreateArrayBuffer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer
  name: SetValueBuffer
  nameWithType: ComputeShaderUtilities.SetValueBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetValueBuffer
- uid: Global.ComputeShader
  isExternal: true
  name: ComputeShader
  nameWithType: ComputeShader
  fullName: ComputeShader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer
  name: SetArrayBuffer
  nameWithType: ComputeShaderUtilities.SetArrayBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.SetArrayBuffer
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer
  name: GetValueViaBuffer
  nameWithType: ComputeShaderUtilities.GetValueViaBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetValueViaBuffer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer
  name: GetArrayViaBuffer
  nameWithType: ComputeShaderUtilities.GetArrayViaBuffer
  fullName: ProgLibrary.PrecomputedCulling.Utils.ComputeShaderUtilities.GetArrayViaBuffer
