### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  commentId: T:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  id: PrecomputedChunkData
  parent: ProgLibrary.PrecomputedCulling.DataModels
  children:
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex(System.Int32,ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices@)
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Box
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex(Vector3@,System.Int32@,System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex(System.Int32,System.Int32,System.Int32,System.Int32)
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers(Vector3@,PrecomputedArea@,ProgLibrary.PrecomputedCulling.PrecomputedCamera@)
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GroupRenderersData
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Height
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize(PrecomputedArea@,Scene)
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Length
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.RenderersData
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.TargetSceneName
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Width
  langs:
  - csharp
  - vb
  name: PrecomputedChunkData
  nameWithType: PrecomputedChunkData
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  type: Class
  source:
    id: PrecomputedChunkData
    path: ''
    startLine: 2229
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nData of a single chunked region\n"
  example: []
  syntax:
    content: 'public class PrecomputedChunkData : ScriptableObject'
    content.vb: Public Class PrecomputedChunkData Inherits ScriptableObject
  inheritance:
  - System.Object
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.TargetSceneName
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.TargetSceneName
  id: TargetSceneName
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: TargetSceneName
  nameWithType: PrecomputedChunkData.TargetSceneName
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.TargetSceneName
  type: Field
  source:
    id: TargetSceneName
    path: ''
    startLine: 2235
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nTarget scene reference\n"
  example: []
  syntax:
    content: public string TargetSceneName
    return:
      type: System.String
    content.vb: Public TargetSceneName As String
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Width
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Width
  id: Width
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: PrecomputedChunkData.Width
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Width
  type: Field
  source:
    id: Width
    path: ''
    startLine: 2240
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nAmount of x cells in this chunk\n"
  example: []
  syntax:
    content: public int Width
    return:
      type: System.Int32
    content.vb: Public Width As Integer
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Height
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Height
  id: Height
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: PrecomputedChunkData.Height
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Height
  type: Field
  source:
    id: Height
    path: ''
    startLine: 2245
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nAmount of y cells in this chunk\n"
  example: []
  syntax:
    content: public int Height
    return:
      type: System.Int32
    content.vb: Public Height As Integer
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Length
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Length
  id: Length
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: PrecomputedChunkData.Length
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Length
  type: Field
  source:
    id: Length
    path: ''
    startLine: 2250
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nAmount of z cells in this chunk\n"
  example: []
  syntax:
    content: public int Length
    return:
      type: System.Int32
    content.vb: Public Length As Integer
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Box
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Box
  id: Box
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: Box
  nameWithType: PrecomputedChunkData.Box
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Box
  type: Field
  source:
    id: Box
    path: ''
    startLine: 2255
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nBounding box of the chunk\n"
  example: []
  syntax:
    content: public BoundingBox Box
    return:
      type: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
    content.vb: Public Box As BoundingBox
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GroupRenderersData
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GroupRenderersData
  id: GroupRenderersData
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: GroupRenderersData
  nameWithType: PrecomputedChunkData.GroupRenderersData
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GroupRenderersData
  type: Field
  source:
    id: GroupRenderersData
    path: ''
    startLine: 2260
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nChunks of indexes of the group of the redenrers\n"
  example: []
  syntax:
    content: public PrecomputedChunkElementData[][] GroupRenderersData
    return:
      type: Global.PrecomputedChunkElementData[][]
    content.vb: Public GroupRenderersData As PrecomputedChunkElementData()()
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.RenderersData
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.RenderersData
  id: RenderersData
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: RenderersData
  nameWithType: PrecomputedChunkData.RenderersData
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.RenderersData
  type: Field
  source:
    id: RenderersData
    path: ''
    startLine: 2269
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nChunks of indexes of the renderers\n"
  example: []
  syntax:
    content: public PrecomputedChunkElementData[][] RenderersData
    return:
      type: Global.PrecomputedChunkElementData[][]
    content.vb: Public RenderersData As PrecomputedChunkElementData()()
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize(PrecomputedArea@,Scene)
  commentId: M:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize(PrecomputedArea@,Scene)
  id: Initialize(PrecomputedArea@,Scene)
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: Initialize(in PrecomputedArea, Scene)
  nameWithType: PrecomputedChunkData.Initialize(in PrecomputedArea, Scene)
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize(in PrecomputedArea, Scene)
  type: Method
  source:
    id: Initialize
    path: ''
    startLine: 2282
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nInitialize chunk bake data\n"
  example: []
  syntax:
    content: public void Initialize(in PrecomputedArea precomputedArea, Scene targetScene)
    parameters:
    - id: precomputedArea
      type: Global.PrecomputedArea
      description: ''
    - id: targetScene
      type: Global.Scene
      description: ''
    content.vb: Public Sub Initialize(precomputedArea As PrecomputedArea, targetScene As Scene)
  overload: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize*
  nameWithType.vb: PrecomputedChunkData.Initialize(PrecomputedArea, Scene)
  fullName.vb: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize(PrecomputedArea, Scene)
  name.vb: Initialize(PrecomputedArea, Scene)
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers(Vector3@,PrecomputedArea@,ProgLibrary.PrecomputedCulling.PrecomputedCamera@)
  commentId: M:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers(Vector3@,PrecomputedArea@,ProgLibrary.PrecomputedCulling.PrecomputedCamera@)
  id: GetVisibleRenderers(Vector3@,PrecomputedArea@,ProgLibrary.PrecomputedCulling.PrecomputedCamera@)
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: GetVisibleRenderers(in Vector3, in PrecomputedArea, in PrecomputedCamera)
  nameWithType: PrecomputedChunkData.GetVisibleRenderers(in Vector3, in PrecomputedArea, in PrecomputedCamera)
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers(in Vector3, in PrecomputedArea, in ProgLibrary.PrecomputedCulling.PrecomputedCamera)
  type: Method
  source:
    id: GetVisibleRenderers
    path: ''
    startLine: 2308
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nGet all visible renderers from current camera position\n<remarks>View frustum is applied automatically</remarks>\n"
  example: []
  syntax:
    content: public List<PrecomputedVisibilityIndices> GetVisibleRenderers(in Vector3 cameraPosition, in PrecomputedArea precomputedArea, in PrecomputedCamera precomputedCamera = null)
    parameters:
    - id: cameraPosition
      type: Global.Vector3
      description: Current camera position
    - id: precomputedArea
      type: Global.PrecomputedArea
      description: The Precomputed Area that evokes it
    - id: precomputedCamera
      type: ProgLibrary.PrecomputedCulling.PrecomputedCamera
      description: Current camera settings
    return:
      type: Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices}
    content.vb: Public Function GetVisibleRenderers(cameraPosition As Vector3, precomputedArea As PrecomputedArea, precomputedCamera As PrecomputedCamera = Nothing) As List(Of PrecomputedVisibilityIndices)
  overload: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers*
  nameWithType.vb: PrecomputedChunkData.GetVisibleRenderers(Vector3, PrecomputedArea, PrecomputedCamera)
  fullName.vb: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers(Vector3, PrecomputedArea, ProgLibrary.PrecomputedCulling.PrecomputedCamera)
  name.vb: GetVisibleRenderers(Vector3, PrecomputedArea, PrecomputedCamera)
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex(Vector3@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex(Vector3@,System.Int32@,System.Int32@,System.Int32@)
  id: GetChunkIndex(Vector3@,System.Int32@,System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: GetChunkIndex(in Vector3, out int, out int, out int)
  nameWithType: PrecomputedChunkData.GetChunkIndex(in Vector3, out int, out int, out int)
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex(in Vector3, out int, out int, out int)
  type: Method
  source:
    id: GetChunkIndex
    path: ''
    startLine: 2343
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nGet chunk index and array coordinates from camera position\n"
  remarks: "\nAssume that positive X and positive Y are [0,0] - and thus indexes are towards negative eg: [0, -1] is index\n1, [-1, 0] is index 64\n"
  example: []
  syntax:
    content: public int GetChunkIndex(in Vector3 cameraPosition, out int x, out int y, out int z)
    parameters:
    - id: cameraPosition
      type: Global.Vector3
      description: ''
    - id: x
      type: System.Int32
      description: X chunk id
    - id: y
      type: System.Int32
      description: Y chunk id
    - id: z
      type: System.Int32
      description: Z chunk id
    return:
      type: System.Int32
      description: Return index of the box or -1 if point is not without it&apos;s bounds
    content.vb: Public Function GetChunkIndex(cameraPosition As Vector3, x As Integer, y As Integer, z As Integer) As Integer
  overload: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex*
  nameWithType.vb: PrecomputedChunkData.GetChunkIndex(Vector3, Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex(Vector3, Integer, Integer, Integer)
  name.vb: GetChunkIndex(Vector3, Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetNeighbourhoodChunkIndex(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: GetNeighbourhoodChunkIndex(int, int, int, int)
  nameWithType: PrecomputedChunkData.GetNeighbourhoodChunkIndex(int, int, int, int)
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex(int, int, int, int)
  type: Method
  source:
    id: GetNeighbourhoodChunkIndex
    path: ''
    startLine: 2369
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nGet point and neighbors index points\n"
  example: []
  syntax:
    content: public List<int> GetNeighbourhoodChunkIndex(int xId, int yId, int zId, int neighbourCellsRadius)
    parameters:
    - id: xId
      type: System.Int32
      description: ''
    - id: yId
      type: System.Int32
      description: ''
    - id: zId
      type: System.Int32
      description: ''
    - id: neighbourCellsRadius
      type: System.Int32
      description: ''
    return:
      type: Global.List{System.Int32}
      description: ''
    content.vb: Public Function GetNeighbourhoodChunkIndex(xId As Integer, yId As Integer, zId As Integer, neighbourCellsRadius As Integer) As List(Of Integer)
  overload: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex*
  nameWithType.vb: PrecomputedChunkData.GetNeighbourhoodChunkIndex(Integer, Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex(Integer, Integer, Integer, Integer)
  name.vb: GetNeighbourhoodChunkIndex(Integer, Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex(System.Int32,ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices@)
  commentId: M:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex(System.Int32,ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices@)
  id: AddAtIndex(System.Int32,ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices@)
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData
  langs:
  - csharp
  - vb
  name: AddAtIndex(int, in PrecomputedVisibilityIndices)
  nameWithType: PrecomputedChunkData.AddAtIndex(int, in PrecomputedVisibilityIndices)
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex(int, in ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices)
  type: Method
  source:
    id: AddAtIndex
    path: ''
    startLine: 2441
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nAdd new \n"
  example: []
  syntax:
    content: public void AddAtIndex(int index, in PrecomputedVisibilityIndices visibilityIndices)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: visibilityIndices
      type: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
      description: ''
    content.vb: Public Sub AddAtIndex(index As Integer, visibilityIndices As PrecomputedVisibilityIndices)
  overload: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex*
  nameWithType.vb: PrecomputedChunkData.AddAtIndex(Integer, PrecomputedVisibilityIndices)
  fullName.vb: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex(Integer, ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices)
  name.vb: AddAtIndex(Integer, PrecomputedVisibilityIndices)
references:
- uid: ProgLibrary.PrecomputedCulling.DataModels
  commentId: N:ProgLibrary.PrecomputedCulling.DataModels
  name: ProgLibrary.PrecomputedCulling.DataModels
  nameWithType: ProgLibrary.PrecomputedCulling.DataModels
  fullName: ProgLibrary.PrecomputedCulling.DataModels
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.DataModels
    name: DataModels
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.DataModels
    name: DataModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
  commentId: T:ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
  parent: ProgLibrary.PrecomputedCulling.DataModels
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
- uid: Global.PrecomputedChunkElementData[][]
  isExternal: true
  name: PrecomputedChunkElementData[][]
  nameWithType: PrecomputedChunkElementData[][]
  fullName: PrecomputedChunkElementData[][]
  nameWithType.vb: PrecomputedChunkElementData()()
  fullName.vb: PrecomputedChunkElementData()()
  name.vb: PrecomputedChunkElementData()()
  spec.csharp:
  - uid: Global.PrecomputedChunkElementData
    name: PrecomputedChunkElementData
    isExternal: true
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.PrecomputedChunkElementData
    name: PrecomputedChunkElementData
    isExternal: true
  - name: (
  - name: )
  - name: (
  - name: )
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize*
  commentId: Overload:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize
  name: Initialize
  nameWithType: PrecomputedChunkData.Initialize
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.Initialize
- uid: Global.PrecomputedArea
  isExternal: true
  name: PrecomputedArea
  nameWithType: PrecomputedArea
  fullName: PrecomputedArea
- uid: Global.Scene
  isExternal: true
  name: Scene
  nameWithType: Scene
  fullName: Scene
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers*
  commentId: Overload:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers
  name: GetVisibleRenderers
  nameWithType: PrecomputedChunkData.GetVisibleRenderers
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetVisibleRenderers
- uid: Global.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: Vector3
- uid: ProgLibrary.PrecomputedCulling.PrecomputedCamera
  commentId: T:ProgLibrary.PrecomputedCulling.PrecomputedCamera
  parent: ProgLibrary.PrecomputedCulling
  name: PrecomputedCamera
  nameWithType: PrecomputedCamera
  fullName: ProgLibrary.PrecomputedCulling.PrecomputedCamera
- uid: Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices}
  commentId: '!:Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices}'
  definition: Global.List`1
  name: List<PrecomputedVisibilityIndices>
  nameWithType: List<PrecomputedVisibilityIndices>
  fullName: List<ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices>
  nameWithType.vb: List(Of PrecomputedVisibilityIndices)
  fullName.vb: List(Of ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices)
  name.vb: List(Of PrecomputedVisibilityIndices)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
    name: PrecomputedVisibilityIndices
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
    name: PrecomputedVisibilityIndices
  - name: )
- uid: ProgLibrary.PrecomputedCulling
  commentId: N:ProgLibrary.PrecomputedCulling
  name: ProgLibrary.PrecomputedCulling
  nameWithType: ProgLibrary.PrecomputedCulling
  fullName: ProgLibrary.PrecomputedCulling
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex
  name: GetChunkIndex
  nameWithType: PrecomputedChunkData.GetChunkIndex
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetChunkIndex
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex
  name: GetNeighbourhoodChunkIndex
  nameWithType: PrecomputedChunkData.GetNeighbourhoodChunkIndex
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.GetNeighbourhoodChunkIndex
- uid: Global.List{System.Int32}
  commentId: '!:Global.List{System.Int32}'
  definition: Global.List`1
  name: List<int>
  nameWithType: List<int>
  fullName: List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex
  name: AddAtIndex
  nameWithType: PrecomputedChunkData.AddAtIndex
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedChunkData.AddAtIndex
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
  commentId: T:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
  parent: ProgLibrary.PrecomputedCulling.DataModels
  name: PrecomputedVisibilityIndices
  nameWithType: PrecomputedVisibilityIndices
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedVisibilityIndices
