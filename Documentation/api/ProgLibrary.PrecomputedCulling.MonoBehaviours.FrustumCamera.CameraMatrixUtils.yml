### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  commentId: T:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  id: CameraMatrixUtils
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  children:
  - ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,BoundingBox)
  - ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  langs:
  - csharp
  - vb
  name: CameraMatrixUtils
  nameWithType: CameraMatrixUtils
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  type: Class
  source:
    id: CameraMatrixUtils
    path: ''
    startLine: 5546
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  syntax:
    content: public static class CameraMatrixUtils
    content.vb: Public Module CameraMatrixUtils
  inheritance:
  - System.Object
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,BoundingBox)
  commentId: M:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,BoundingBox)
  id: BoxToViewportAndDepth(UnityEngine.Camera,BoundingBox)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  langs:
  - csharp
  - vb
  name: BoxToViewportAndDepth(Camera, BoundingBox)
  nameWithType: CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera, BoundingBox)
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera, BoundingBox)
  type: Method
  source:
    id: BoxToViewportAndDepth
    path: ''
    startLine: 5554
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  summary: "\nUsing bounding box of the object, calculates Viewport values (Rect) in [0,1] as well as distance from camera (depth) of the furthest points in the box\n"
  example: []
  syntax:
    content: public static (Rect Viewport, float Depth) BoxToViewportAndDepth(this UnityEngine.Camera camera, BoundingBox box)
    parameters:
    - id: camera
      type: Global.UnityEngine.Camera
      description: Camera to view from
    - id: box
      type: Global.BoundingBox
      description: Box to calculate against
    return:
      type: System.ValueTuple{Rect,System.Single}
      description: ''
    content.vb: Public Shared Function BoxToViewportAndDepth(camera As UnityEngine.Camera, box As BoundingBox) As (Viewport As Rect, Depth As Single)
  overload: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth*
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  id: PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  langs:
  - csharp
  - vb
  name: PerspectiveOffCenter(Camera, in float, in float, in float, in float)
  nameWithType: CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, in float, in float, in float, in float)
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, in float, in float, in float, in float)
  type: Method
  source:
    id: PerspectiveOffCenter
    path: ''
    startLine: 5582
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  summary: "\nCalculates camera view Frustum using left, right, bottom, top values via matrix multipication\n"
  example: []
  syntax:
    content: public static Matrix4x4 PerspectiveOffCenter(this UnityEngine.Camera camera, in float left, in float right, in float bottom, in float top)
    parameters:
    - id: camera
      type: Global.UnityEngine.Camera
      description: Camera to calculate matrix from
    - id: left
      type: System.Single
      description: Left value of the view frustum
    - id: right
      type: System.Single
      description: Right value of view frustum
    - id: bottom
      type: System.Single
      description: Bottom value of the view frustum
    - id: top
      type: System.Single
      description: Top value of the view frustum
    return:
      type: Global.Matrix4x4
      description: ''
    content.vb: Public Shared Function PerspectiveOffCenter(camera As UnityEngine.Camera, left As Single, right As Single, bottom As Single, top As Single) As Matrix4x4
  overload: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter*
  nameWithType.vb: CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, Single, Single, Single, Single)
  fullName.vb: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, Single, Single, Single, Single)
  name.vb: PerspectiveOffCenter(Camera, Single, Single, Single, Single)
references:
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  commentId: N:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  name: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  nameWithType: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.MonoBehaviours
    name: MonoBehaviours
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
    name: FrustumCamera
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.MonoBehaviours
    name: MonoBehaviours
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
    name: FrustumCamera
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth*
  commentId: Overload:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth
  name: BoxToViewportAndDepth
  nameWithType: CameraMatrixUtils.BoxToViewportAndDepth
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth
- uid: Global.UnityEngine.Camera
  isExternal: true
  name: Camera
  nameWithType: UnityEngine.Camera
  fullName: UnityEngine.Camera
- uid: Global.BoundingBox
  isExternal: true
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: BoundingBox
- uid: System.ValueTuple{Rect,System.Single}
  commentId: T:System.ValueTuple{Rect,System.Single}
  parent: System
  definition: System.ValueTuple`2
  name: (Rect Viewport, float Depth)
  nameWithType: (Rect Viewport, float Depth)
  fullName: (Rect Viewport, float Depth)
  nameWithType.vb: (Viewport As Rect, Depth As Single)
  fullName.vb: (Viewport As Rect, Depth As Single)
  name.vb: (Viewport As Rect, Depth As Single)
  spec.csharp:
  - name: (
  - uid: Global.Rect
    name: Rect
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Rect,System.Single}.Viewport
    name: Viewport
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{Rect,System.Single}.Depth
    name: Depth
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{Rect,System.Single}.Viewport
    name: Viewport
  - name: " "
  - name: As
  - name: " "
  - uid: Global.Rect
    name: Rect
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{Rect,System.Single}.Depth
    name: Depth
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter*
  commentId: Overload:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter
  name: PerspectiveOffCenter
  nameWithType: CameraMatrixUtils.PerspectiveOffCenter
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Matrix4x4
  commentId: '!:Global.Matrix4x4'
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: Matrix4x4
