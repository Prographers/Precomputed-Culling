### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  commentId: T:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  id: CameraMatrixUtils
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  children:
  - ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,ProgLibrary.PrecomputedCulling.DataModels.BoundingBox)
  - ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  langs:
  - csharp
  - vb
  name: CameraMatrixUtils
  nameWithType: CameraMatrixUtils
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  type: Class
  source:
    remote:
      path: OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
      branch: develop
      repo: git@bitbucket.org:prographers/perfect-culling.git
    id: CameraMatrixUtils
    path: ../../../Unity/perfect-culling/OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
    startLine: 6
  assemblies:
  - PrecomputedCulling
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  syntax:
    content: public static class CameraMatrixUtils
    content.vb: Public Module CameraMatrixUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,ProgLibrary.PrecomputedCulling.DataModels.BoundingBox)
  commentId: M:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera,ProgLibrary.PrecomputedCulling.DataModels.BoundingBox)
  id: BoxToViewportAndDepth(UnityEngine.Camera,ProgLibrary.PrecomputedCulling.DataModels.BoundingBox)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  langs:
  - csharp
  - vb
  name: BoxToViewportAndDepth(Camera, BoundingBox)
  nameWithType: CameraMatrixUtils.BoxToViewportAndDepth(Camera, BoundingBox)
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth(UnityEngine.Camera, ProgLibrary.PrecomputedCulling.DataModels.BoundingBox)
  type: Method
  source:
    remote:
      path: OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
      branch: develop
      repo: git@bitbucket.org:prographers/perfect-culling.git
    id: BoxToViewportAndDepth
    path: ../../../Unity/perfect-culling/OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
    startLine: 14
  assemblies:
  - PrecomputedCulling
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  summary: "\nUsing bounding box of the object, calculates Viewport values (Rect) in [0,1] as well as distance from camera (depth) of the furthest points in the box\n"
  example: []
  syntax:
    content: public static (Rect Viewport, float Depth) BoxToViewportAndDepth(this Camera camera, BoundingBox box)
    parameters:
    - id: camera
      type: UnityEngine.Camera
      description: Camera to view from
    - id: box
      type: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
      description: Box to calculate against
    return:
      type: System.ValueTuple{UnityEngine.Rect,System.Single}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function BoxToViewportAndDepth(camera As Camera, box As BoundingBox) As(Viewport As Rect, Depth As Single)(Of Rect , Single)
  overload: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  id: PerspectiveOffCenter(UnityEngine.Camera,System.Single@,System.Single@,System.Single@,System.Single@)
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils
  langs:
  - csharp
  - vb
  name: PerspectiveOffCenter(Camera, in Single, in Single, in Single, in Single)
  nameWithType: CameraMatrixUtils.PerspectiveOffCenter(Camera, in Single, in Single, in Single, in Single)
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, in System.Single, in System.Single, in System.Single, in System.Single)
  type: Method
  source:
    remote:
      path: OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
      branch: develop
      repo: git@bitbucket.org:prographers/perfect-culling.git
    id: PerspectiveOffCenter
    path: ../../../Unity/perfect-culling/OcclusionCulling/Assets/Scripts/ProgLibrary/PrecomputedCulling/PrecomputedCulling/MonoBehaviours/FrustumCamera/CameraMatrix.cs
    startLine: 42
  assemblies:
  - PrecomputedCulling
  namespace: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  summary: "\nCalculates camera view Frustum using left, right, bottom, top values via matrix multipication\n"
  example: []
  syntax:
    content: public static Matrix4x4 PerspectiveOffCenter(this Camera camera, in float left, in float right, in float bottom, in float top)
    parameters:
    - id: camera
      type: UnityEngine.Camera
      description: Camera to calculate matrix from
    - id: left
      type: System.Single
      description: Left value of the view frustum
    - id: right
      type: System.Single
      description: Right value of view frustum
    - id: bottom
      type: System.Single
      description: Bottom value of the view frustum
    - id: top
      type: System.Single
      description: Top value of the view frustum
    return:
      type: UnityEngine.Matrix4x4
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PerspectiveOffCenter(camera As Camera, ByRef left As Single, ByRef right As Single, ByRef bottom As Single, ByRef top As Single) As Matrix4x4
  overload: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter*
  nameWithType.vb: CameraMatrixUtils.PerspectiveOffCenter(Camera, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter(UnityEngine.Camera, ByRef System.Single, ByRef System.Single, ByRef System.Single, ByRef System.Single)
  name.vb: PerspectiveOffCenter(Camera, ByRef Single, ByRef Single, ByRef Single, ByRef Single)
references:
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  commentId: N:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  name: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  nameWithType: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth*
  commentId: Overload:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth
  name: BoxToViewportAndDepth
  nameWithType: CameraMatrixUtils.BoxToViewportAndDepth
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.BoxToViewportAndDepth
- uid: UnityEngine.Camera
  commentId: T:UnityEngine.Camera
  parent: UnityEngine
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: UnityEngine.Camera
- uid: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
  commentId: T:ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
  parent: ProgLibrary.PrecomputedCulling.DataModels
  name: BoundingBox
  nameWithType: BoundingBox
  fullName: ProgLibrary.PrecomputedCulling.DataModels.BoundingBox
- uid: System.ValueTuple{UnityEngine.Rect,System.Single}
  commentId: T:System.ValueTuple{UnityEngine.Rect,System.Single}
  parent: System
  definition: System.ValueTuple`2
  name: (T1, T2)<Rect, Single>
  nameWithType: (T1, T2)<Rect, Single>
  fullName: System.ValueTuple<UnityEngine.Rect, System.Single>
  nameWithType.vb: (T1, T2)(Of Rect, Single)
  fullName.vb: System.ValueTuple(Of UnityEngine.Rect, System.Single)
  name.vb: (T1, T2)(Of Rect, Single)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: UnityEngine.Rect
    name: Rect
    nameWithType: Rect
    fullName: UnityEngine.Rect
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: ProgLibrary.PrecomputedCulling.DataModels
  commentId: N:ProgLibrary.PrecomputedCulling.DataModels
  name: ProgLibrary.PrecomputedCulling.DataModels
  nameWithType: ProgLibrary.PrecomputedCulling.DataModels
  fullName: ProgLibrary.PrecomputedCulling.DataModels
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  isExternal: true
  name: (T1, T2)<T1, T2>
  nameWithType: (T1, T2)<T1, T2>
  fullName: System.ValueTuple<T1, T2>
  nameWithType.vb: (T1, T2)(Of T1, T2)
  fullName.vb: System.ValueTuple(Of T1, T2)
  name.vb: (T1, T2)(Of T1, T2)
  spec.csharp:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`2
    name: (T1, T2)
    nameWithType: (T1, T2)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: )
    nameWithType: )
    fullName: )
- uid: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter*
  commentId: Overload:ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter
  name: PerspectiveOffCenter
  nameWithType: CameraMatrixUtils.PerspectiveOffCenter
  fullName: ProgLibrary.PrecomputedCulling.MonoBehaviours.FrustumCamera.CameraMatrixUtils.PerspectiveOffCenter
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: UnityEngine.Matrix4x4
  commentId: T:UnityEngine.Matrix4x4
  parent: UnityEngine
  isExternal: true
  name: Matrix4x4
  nameWithType: Matrix4x4
  fullName: UnityEngine.Matrix4x4
