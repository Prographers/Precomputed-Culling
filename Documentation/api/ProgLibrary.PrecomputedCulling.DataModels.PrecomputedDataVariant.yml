### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  commentId: T:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  id: PrecomputedDataVariant
  parent: ProgLibrary.PrecomputedCulling.DataModels
  children:
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Index
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.OcclusionDatas
  - ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Scenes
  langs:
  - csharp
  - vb
  name: PrecomputedDataVariant
  nameWithType: PrecomputedDataVariant
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  type: Class
  source:
    id: PrecomputedDataVariant
    path: ''
    startLine: 2642
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nBake variant data\nGather precomputedData on all variant scenes\n"
  example: []
  syntax:
    content: 'public class PrecomputedDataVariant : ScriptableObject'
    content.vb: Public Class PrecomputedDataVariant Inherits ScriptableObject
  inheritance:
  - System.Object
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.OcclusionDatas
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.OcclusionDatas
  id: OcclusionDatas
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  langs:
  - csharp
  - vb
  name: OcclusionDatas
  nameWithType: PrecomputedDataVariant.OcclusionDatas
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.OcclusionDatas
  type: Field
  source:
    id: OcclusionDatas
    path: ''
    startLine: 2648
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nList of all scenes occlusions data\n"
  example: []
  syntax:
    content: public List<PrecomputedData> OcclusionDatas
    return:
      type: Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData}
    content.vb: Public OcclusionDatas As List(Of PrecomputedData)
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Index
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Index
  id: Index
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: PrecomputedDataVariant.Index
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Index
  type: Field
  source:
    id: Index
    path: ''
    startLine: 2653
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nIndex of the occlusion variant\n"
  example: []
  syntax:
    content: public int Index
    return:
      type: System.Int32
    content.vb: Public Index As Integer
- uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Scenes
  commentId: F:ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Scenes
  id: Scenes
  parent: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant
  langs:
  - csharp
  - vb
  name: Scenes
  nameWithType: PrecomputedDataVariant.Scenes
  fullName: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedDataVariant.Scenes
  type: Field
  source:
    id: Scenes
    path: ''
    startLine: 2658
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.DataModels
  summary: "\nScenes required in variant\n"
  example: []
  syntax:
    content: public List<string> Scenes
    return:
      type: Global.List{System.String}
    content.vb: Public Scenes As List(Of String)
references:
- uid: ProgLibrary.PrecomputedCulling.DataModels
  commentId: N:ProgLibrary.PrecomputedCulling.DataModels
  name: ProgLibrary.PrecomputedCulling.DataModels
  nameWithType: ProgLibrary.PrecomputedCulling.DataModels
  fullName: ProgLibrary.PrecomputedCulling.DataModels
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.DataModels
    name: DataModels
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.DataModels
    name: DataModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData}
  commentId: '!:Global.List{ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData}'
  definition: Global.List`1
  name: List<PrecomputedData>
  nameWithType: List<PrecomputedData>
  fullName: List<ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData>
  nameWithType.vb: List(Of PrecomputedData)
  fullName.vb: List(Of ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData)
  name.vb: List(Of PrecomputedData)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData
    name: PrecomputedData
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ProgLibrary.PrecomputedCulling.DataModels.PrecomputedData
    name: PrecomputedData
  - name: )
- uid: Global.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - name: ''
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.List{System.String}
  commentId: '!:Global.List{System.String}'
  definition: Global.List`1
  name: List<string>
  nameWithType: List<string>
  fullName: List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Global.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
