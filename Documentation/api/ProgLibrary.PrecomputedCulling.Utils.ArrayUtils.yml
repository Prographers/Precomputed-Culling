### YamlMime:ManagedReference
items:
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  commentId: T:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  id: ArrayUtils
  parent: ProgLibrary.PrecomputedCulling.Utils
  children:
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray``1(``0[])
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray``1(``0[][])
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32,System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex(System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  - ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex(System.Int32@,System.Int32@,System.Int32@)
  langs:
  - csharp
  - vb
  name: ArrayUtils
  nameWithType: ArrayUtils
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  type: Class
  source:
    id: ArrayUtils
    path: ''
    startLine: 7694
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nManagement of multidimensional arrays\n"
  example: []
  syntax:
    content: public static class ArrayUtils
    content.vb: Public Module ArrayUtils
  inheritance:
  - System.Object
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex(System.Int32@,System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex(System.Int32@,System.Int32@,System.Int32@)
  id: FlattenArrayIndex(System.Int32@,System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: FlattenArrayIndex(in int, in int, in int)
  nameWithType: ArrayUtils.FlattenArrayIndex(in int, in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex(in int, in int, in int)
  type: Method
  source:
    id: FlattenArrayIndex
    path: ''
    startLine: 7703
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet Array Index from 2D position\n"
  example: []
  syntax:
    content: public static int FlattenArrayIndex(in int x, in int y, in int width)
    parameters:
    - id: x
      type: System.Int32
      description: X Position
    - id: y
      type: System.Int32
      description: Y Position
    - id: width
      type: System.Int32
      description: Width of the array
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function FlattenArrayIndex(x As Integer, y As Integer, width As Integer) As Integer
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex*
  nameWithType.vb: ArrayUtils.FlattenArrayIndex(Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex(Integer, Integer, Integer)
  name.vb: FlattenArrayIndex(Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex(System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex(System.Int32@,System.Int32@)
  id: ExpandArrayIndex(System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: ExpandArrayIndex(in int, in int)
  nameWithType: ArrayUtils.ExpandArrayIndex(in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex(in int, in int)
  type: Method
  source:
    id: ExpandArrayIndex
    path: ''
    startLine: 7714
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet 2D Array from Flatten array index\n"
  example: []
  syntax:
    content: public static (int x, int y) ExpandArrayIndex(in int index, in int width)
    parameters:
    - id: index
      type: System.Int32
      description: Flatten array index
    - id: width
      type: System.Int32
      description: Width of the array
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
      description: ''
    content.vb: Public Shared Function ExpandArrayIndex(index As Integer, width As Integer) As (x As Integer, y As Integer)
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex*
  nameWithType.vb: ArrayUtils.ExpandArrayIndex(Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex(Integer, Integer)
  name.vb: ExpandArrayIndex(Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: Flatten3DArrayIndex(in int, in int, in int, in int)
  nameWithType: ArrayUtils.Flatten3DArrayIndex(in int, in int, in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(in int, in int, in int, in int)
  type: Method
  source:
    id: Flatten3DArrayIndex
    path: ''
    startLine: 7729
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet Array Index from 2D position\n"
  example: []
  syntax:
    content: public static int Flatten3DArrayIndex(in int x, in int y, in int z, in int divisor)
    parameters:
    - id: x
      type: System.Int32
      description: X Position
    - id: y
      type: System.Int32
      description: Y Position
    - id: z
      type: System.Int32
      description: Z Position
    - id: divisor
      type: System.Int32
      description: Uniform size of the array
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Flatten3DArrayIndex(x As Integer, y As Integer, z As Integer, divisor As Integer) As Integer
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex*
  nameWithType.vb: ArrayUtils.Flatten3DArrayIndex(Integer, Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(Integer, Integer, Integer, Integer)
  name.vb: Flatten3DArrayIndex(Integer, Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32@,System.Int32@)
  id: Expand3DArrayIndex(System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: Expand3DArrayIndex(in int, in int)
  nameWithType: ArrayUtils.Expand3DArrayIndex(in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(in int, in int)
  type: Method
  source:
    id: Expand3DArrayIndex
    path: ''
    startLine: 7741
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet 2D Array from Flatten array index\n"
  example: []
  syntax:
    content: public static (int x, int y, int z) Expand3DArrayIndex(in int index, in int divisor)
    parameters:
    - id: index
      type: System.Int32
      description: Flatten array index
    - id: divisor
      type: System.Int32
      description: Uniform size of the array
    return:
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
      description: ''
    content.vb: Public Shared Function Expand3DArrayIndex(index As Integer, divisor As Integer) As (x As Integer, y As Integer, z As Integer)
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex*
  nameWithType.vb: ArrayUtils.Expand3DArrayIndex(Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(Integer, Integer)
  name.vb: Expand3DArrayIndex(Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  id: Flatten3DArrayIndex(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: Flatten3DArrayIndex(in int, in int, in int, in int, in int)
  nameWithType: ArrayUtils.Flatten3DArrayIndex(in int, in int, in int, in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(in int, in int, in int, in int, in int)
  type: Method
  source:
    id: Flatten3DArrayIndex
    path: ''
    startLine: 7759
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet Array Index from 3D position\n"
  example: []
  syntax:
    content: public static int Flatten3DArrayIndex(in int x, in int y, in int z, in int xMax, in int yMax)
    parameters:
    - id: x
      type: System.Int32
      description: ''
    - id: y
      type: System.Int32
      description: ''
    - id: z
      type: System.Int32
      description: ''
    - id: xMax
      type: System.Int32
      description: ''
    - id: yMax
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Shared Function Flatten3DArrayIndex(x As Integer, y As Integer, z As Integer, xMax As Integer, yMax As Integer) As Integer
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex*
  nameWithType.vb: ArrayUtils.Flatten3DArrayIndex(Integer, Integer, Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex(Integer, Integer, Integer, Integer, Integer)
  name.vb: Flatten3DArrayIndex(Integer, Integer, Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32,System.Int32@,System.Int32@)
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(System.Int32,System.Int32@,System.Int32@)
  id: Expand3DArrayIndex(System.Int32,System.Int32@,System.Int32@)
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: Expand3DArrayIndex(int, in int, in int)
  nameWithType: ArrayUtils.Expand3DArrayIndex(int, in int, in int)
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(int, in int, in int)
  type: Method
  source:
    id: Expand3DArrayIndex
    path: ''
    startLine: 7775
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nGet 3D Array from Flatten array index\n"
  example: []
  syntax:
    content: public static (int x, int y, int z) Expand3DArrayIndex(int index, in int xMax, in int yMax)
    parameters:
    - id: index
      type: System.Int32
      description: ''
    - id: xMax
      type: System.Int32
      description: ''
    - id: yMax
      type: System.Int32
      description: ''
    return:
      type: System.ValueTuple{System.Int32,System.Int32,System.Int32}
      description: ''
    content.vb: Public Shared Function Expand3DArrayIndex(index As Integer, xMax As Integer, yMax As Integer) As (x As Integer, y As Integer, z As Integer)
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex*
  nameWithType.vb: ArrayUtils.Expand3DArrayIndex(Integer, Integer, Integer)
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex(Integer, Integer, Integer)
  name.vb: Expand3DArrayIndex(Integer, Integer, Integer)
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray``1(``0[][])
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray``1(``0[][])
  id: CopyJaggedArray``1(``0[][])
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: CopyJaggedArray<T>(T[][])
  nameWithType: ArrayUtils.CopyJaggedArray<T>(T[][])
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray<T>(T[][])
  type: Method
  source:
    id: CopyJaggedArray
    path: ''
    startLine: 7795
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nPerforms a copy of a jagged array\n"
  example: []
  syntax:
    content: public static T[][] CopyJaggedArray<T>(this T[][] source)
    parameters:
    - id: source
      type: '{T}[][]'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[][]'
      description: ''
    content.vb: Public Shared Function CopyJaggedArray(Of T)(source As T()()) As T()()
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray*
  nameWithType.vb: ArrayUtils.CopyJaggedArray(Of T)(T()())
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray(Of T)(T()())
  name.vb: CopyJaggedArray(Of T)(T()())
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray``1(``0[])
  commentId: M:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray``1(``0[])
  id: CopyArray``1(``0[])
  isExtensionMethod: true
  parent: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils
  langs:
  - csharp
  - vb
  name: CopyArray<T>(T[])
  nameWithType: ArrayUtils.CopyArray<T>(T[])
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray<T>(T[])
  type: Method
  source:
    id: CopyArray
    path: ''
    startLine: 7827
  assemblies:
  - cs.temp.dll
  namespace: ProgLibrary.PrecomputedCulling.Utils
  summary: "\nInline array copy\n"
  example: []
  syntax:
    content: public static T[] CopyArray<T>(this T[] source)
    parameters:
    - id: source
      type: '{T}[]'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}[]'
      description: ''
    content.vb: Public Shared Function CopyArray(Of T)(source As T()) As T()
  overload: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray*
  nameWithType.vb: ArrayUtils.CopyArray(Of T)(T())
  fullName.vb: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray(Of T)(T())
  name.vb: CopyArray(Of T)(T())
references:
- uid: ProgLibrary.PrecomputedCulling.Utils
  commentId: N:ProgLibrary.PrecomputedCulling.Utils
  name: ProgLibrary.PrecomputedCulling.Utils
  nameWithType: ProgLibrary.PrecomputedCulling.Utils
  fullName: ProgLibrary.PrecomputedCulling.Utils
  spec.csharp:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.Utils
    name: Utils
  spec.vb:
  - uid: ProgLibrary
    name: ProgLibrary
  - name: .
  - uid: ProgLibrary.PrecomputedCulling
    name: PrecomputedCulling
  - name: .
  - uid: ProgLibrary.PrecomputedCulling.Utils
    name: Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex
  name: FlattenArrayIndex
  nameWithType: ArrayUtils.FlattenArrayIndex
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.FlattenArrayIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex
  name: ExpandArrayIndex
  nameWithType: ArrayUtils.ExpandArrayIndex
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.ExpandArrayIndex
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  name: (int x, int y)
  nameWithType: (int x, int y)
  fullName: (int x, int y)
  nameWithType.vb: (x As Integer, y As Integer)
  fullName.vb: (x As Integer, y As Integer)
  name.vb: (x As Integer, y As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.x
    name: x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.y
    name: y
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.x
    name: x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.y
    name: y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex
  name: Flatten3DArrayIndex
  nameWithType: ArrayUtils.Flatten3DArrayIndex
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Flatten3DArrayIndex
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex
  name: Expand3DArrayIndex
  nameWithType: ArrayUtils.Expand3DArrayIndex
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.Expand3DArrayIndex
- uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`3
  name: (int x, int y, int z)
  nameWithType: (int x, int y, int z)
  fullName: (int x, int y, int z)
  nameWithType.vb: (x As Integer, y As Integer, z As Integer)
  fullName.vb: (x As Integer, y As Integer, z As Integer)
  name.vb: (x As Integer, y As Integer, z As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.x
    name: x
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.y
    name: y
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32,System.Int32}.z
    name: z
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray
  name: CopyJaggedArray
  nameWithType: ArrayUtils.CopyJaggedArray
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyJaggedArray
- uid: '{T}[][]'
  isExternal: true
  name: T[][]
  nameWithType: T[][]
  fullName: T[][]
  nameWithType.vb: T()()
  fullName.vb: T()()
  name.vb: T()()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
  - name: (
  - name: )
- uid: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray*
  commentId: Overload:ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray
  name: CopyArray
  nameWithType: ArrayUtils.CopyArray
  fullName: ProgLibrary.PrecomputedCulling.Utils.ArrayUtils.CopyArray
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
